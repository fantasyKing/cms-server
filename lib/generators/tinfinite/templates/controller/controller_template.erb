module Db<%= db_name_camel %>
  class <%= model_name_camel.pluralize %>Controller < ApplicationController
    def index
      @<%= all_instance_name %>_grid = <%= grid_name %>Grid.new(params[:<%= instance_name %>_grid]) do |scope|
        scope.page(params[:page]).per(25)
      end
    end

    def show
      @<%= instance_name %> = <%= model_name_camel %>.find(params[:id])
    end

    def edit
        @<%= instance_name %> = <%= model_name_camel %>.find(params[:id])
    end

    def destroy
      @<%= instance_name %> = <%= model_name_camel %>.find(params[:id]).delete
      redirect_to :back, notice: "Deleted." #dashboard_users_path
    end

    def create
      @<%= instance_name %> = <%= model_name_camel %>.create(app_info_params)
      redirect_to :back, notice: "Created." #dashboard_users_path
    end

    def update
      @<%= instance_name %> = <%= model_name_camel %>.find(params[:id])
      if @<%= instance_name %>.update(<%= instance_name %>_params)
        redirect_to :back, notice: "Updated." #dashboard_users_path
      end
    end

    def new
      @<%= instance_name %> = <%= model_name_camel %>.new
    end
    private
    def <%= instance_name %>_params
      reqParams = params.require(:<%= all_instance_name %>).permit(<%= model_name_camel %>.valid_attrs.keys)
      reqParams.each do |reqp|
        # logger.tagged("req params") { logger.debug reqParams}
        if <%= model_name_camel %>.fields[reqp[0]] && <%= model_name_camel %>.fields[reqp[0]].options[:type] == Array then
          reqParams[reqp[0]] = reqp[1].split(" ")
        end
        if <%= model_name_camel %>.fields[reqp[0]] && <%= model_name_camel %>.fields[reqp[0]].options[:type] == Hash then
          reqParams[reqp[0]] = JSON.parse(reqp[1])
        end
      end
      return reqParams
    end
  end
end
